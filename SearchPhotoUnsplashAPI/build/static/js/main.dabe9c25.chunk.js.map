{"version":3,"sources":["Photo.js","component/About.js","App.js","index.js"],"names":["Photo","img","urls","regular","discription","likes","user","name","portfolio_url","medium","profile_image","className","src","alt","href","About","clientID","process","App","useState","loading","setLoading","photos","setPhotos","page","setPage","query","setQuery","mounted","useRef","newImages","setNewImages","fetchImages","a","urlPage","urlQuery","url","fetch","response","json","data","oldPhotos","results","useEffect","current","oldPage","event","window","innerHeight","scrollY","document","body","scrollHeight","addEventListener","removeEventListener","initalType","headerName","bgcolor","type","placeholder","value","onChange","e","target","onClick","preventDefault","map","image","index","key","ReactDOM","render","StrictMode","getElementById"],"mappings":"+PA4BeA,EA1BD,SAAC,GASR,IARYC,EAQb,EARJC,KAAQC,QACRC,EAOI,EAPJA,YACAC,EAMI,EANJA,MAMI,IALJC,KACEC,EAIE,EAJFA,KACAC,EAGE,EAHFA,cACiBC,EAEf,EAFFC,cAAiBD,OAGnB,OACE,6BAASE,UAAU,SACjB,yBAAKC,IAAKX,EAAKY,IAAKT,IACpB,yBAAKO,UAAU,cACb,6BACE,4BAAKJ,GACL,2BAAIF,EAAJ,WAEF,uBAAGS,KAAMN,GACP,yBAAKI,IAAKH,EAAQI,IAAKN,EAAMI,UAAU,iB,cCDlCI,ICVTC,EAAQ,qBAAiBC,+CAuIhBC,MAnIf,WAAgB,IAAD,EACiBC,oBAAS,GAD1B,mBACNC,EADM,KACGC,EADH,OAEeF,mBAAS,IAFxB,mBAENG,EAFM,KAEEC,EAFF,OAGWJ,mBAAS,GAHpB,mBAGNK,EAHM,KAGAC,EAHA,OAIaN,mBAAS,IAJtB,mBAINO,EAJM,KAICC,EAJD,KAKPC,EAAUC,kBAAO,GALV,EAMqBV,oBAAS,GAN9B,mBAMNW,EANM,KAMKC,EANL,KAQPC,EAAW,uCAAG,oCAAAC,EAAA,6DAClBZ,GAAW,GAELa,EAHY,gBAGOV,GACnBW,EAJY,iBAIST,GAEzBU,EADEV,EACC,UAhBM,2CAgBN,OAAkBV,GAAlB,OAA6BkB,GAA7B,OAAuCC,GAEvC,UAnBI,oCAmBJ,OAAgBnB,GAAhB,OAA2BkB,GARd,kBAYOG,MAAMD,GAZb,cAYVE,EAZU,iBAaGA,EAASC,OAbZ,QAaVC,EAbU,OAehBjB,GAAU,SAACkB,GACT,OAAIf,GAAkB,IAATF,EACJgB,EAAKE,QAEN,GAAN,mBAAWD,GADFf,EACT,YAAyBc,EAAKE,SAE9B,YAAyBF,OAG7BT,GAAa,GACbV,GAAW,GAzBK,kDA2BhBU,GAAa,GACbV,GAAW,GA5BK,0DAAH,qDA0CjBsB,qBAAU,WACRX,MACC,CAACR,IAEJmB,qBAAU,WACHf,EAAQgB,QAIRd,IACDV,GACJK,GAAQ,SAACoB,GAAD,OAAaA,EAAU,MAL7BjB,EAAQgB,SAAU,IAMnB,CAACd,IAEJ,IAAMgB,EAAQ,WACRC,OAAOC,YAAcD,OAAOE,SAAWC,SAASC,KAAKC,aAAe,GACtErB,GAAa,IASjB,OALAY,qBAAU,WAER,OADAI,OAAOM,iBAAiB,SAAUP,GAC3B,kBAAMC,OAAOO,oBAAoB,SAAUR,MACjD,IAGD,8BACE,kBAAC,IAAD,CACEnC,UAAU,aACV4C,WAAW,QACXC,WAAW,QACXC,QAAQ,WAER,6BACA,uBAAG9C,UAAU,UAAb,qFAEa,4CAFb,KAEwC,6CAFxC,IAGE,0CAHF,sCAG6D,IAC3D,uCAJF,qEAME,kDANF,8EAOwC,IACtC,gEARF,wQAaE,6BACA,uGACuE,OAI3E,6BAASA,UAAU,UACjB,0BAAMA,UAAU,eACd,2BACE+C,KAAK,OACLC,YAAY,SACZhD,UAAU,aACViD,MAAOlC,EACPmC,SAAU,SAACC,GACTnC,EAASmC,EAAEC,OAAOH,UAGtB,4BAAQjD,UAAU,aAAa+C,KAAK,SAASM,QA1EhC,SAACF,GACpBA,EAAEG,iBACGvC,IACQ,IAATF,EAIJC,EAAQ,GAHNO,OAuEM,kBAAC,IAAD,SAIN,6BAASrB,UAAU,UACjB,yBAAKA,UAAU,iBACZW,EAAO4C,KAAI,SAACC,EAAOC,GAClB,OAAO,kBAAC,EAAD,eAAOC,IAAKD,GAAWD,QAGjC/C,GAAW,wBAAIT,UAAU,WAAd,iBCtIpB2D,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFtB,SAASuB,eAAe,W","file":"static/js/main.dabe9c25.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Photo = ({\r\n  urls: { regular: img },\r\n  discription,\r\n  likes,\r\n  user: {\r\n    name,\r\n    portfolio_url,\r\n    profile_image: { medium },\r\n  },\r\n}) => {\r\n  return (\r\n    <article className=\"photo\">\r\n      <img src={img} alt={discription} />\r\n      <div className=\"photo-info\">\r\n        <div>\r\n          <h4>{name}</h4>\r\n          <p>{likes} likes</p>\r\n        </div>\r\n        <a href={portfolio_url}>\r\n          <img src={medium} alt={name} className=\"user-img\" />\r\n        </a>\r\n      </div>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default Photo;\r\n","import React from \"react\";\r\n\r\nfunction About() {\r\n  return (\r\n    <div className=\"modal-container\">\r\n      <p className=\"modal-text\">\r\n        This project further enhanced my understanding regarding the usages of\r\n        hooks like useState, useEffect, useRef. In addition, I practiced\r\n        fetching API data from unsplash.com. I also have a better understanding\r\n        of the URL-parameters. I had learnt some new topics during this project,\r\n        for example, how to add custom environment variables. I think it is also\r\n        important to be able to utilize the Opensource codes on the internet.\r\n        So, I decided to add this amazing modal-window made by GitHub user\r\n        crackayus09(https://github.com/crackayus09/react-dock-modal) instead of\r\n        writing on my own from scratch.\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { FaSearch } from \"react-icons/fa\";\r\nimport Photo from \"./Photo\";\r\n\r\nimport DockModal from \"react-dock-modal\";\r\nimport \"react-dock-modal/dist/index.css\";\r\n\r\nimport About from \"./component/About\";\r\n\r\n// const clientID = `?client_id=${process.env.REACT_APP_ACCESS_KEY}`\r\nconst clientID = `?client_id=${process.env.REACT_APP_ACCESS_KEY}`;\r\nconst mainUrl = `https://api.unsplash.com/photos/`;\r\nconst searchUrl = `https://api.unsplash.com/search/photos/`;\r\n\r\nfunction App() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [photos, setPhotos] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [query, setQuery] = useState(\"\");\r\n  const mounted = useRef(false);\r\n  const [newImages, setNewImages] = useState(false);\r\n\r\n  const fetchImages = async () => {\r\n    setLoading(true);\r\n    let url;\r\n    const urlPage = `&page=${page}`;\r\n    const urlQuery = `&query=${query}`;\r\n    if (query) {\r\n      url = `${searchUrl}${clientID}${urlPage}${urlQuery}`;\r\n    } else {\r\n      url = `${mainUrl}${clientID}${urlPage}`;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n\r\n      setPhotos((oldPhotos) => {\r\n        if (query && page === 1) {\r\n          return data.results;\r\n        } else if (query) {\r\n          return [...oldPhotos, ...data.results];\r\n        } else {\r\n          return [...oldPhotos, ...data];\r\n        }\r\n      });\r\n      setNewImages(false);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setNewImages(false);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!query) return;\r\n    if (page === 1) {\r\n      fetchImages();\r\n      return;\r\n    }\r\n    setPage(1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchImages();\r\n  }, [page]);\r\n\r\n  useEffect(() => {\r\n    if (!mounted.current) {\r\n      mounted.current = true;\r\n      return;\r\n    }\r\n    if (!newImages) return;\r\n    if (loading) return;\r\n    setPage((oldPage) => oldPage + 1);\r\n  }, [newImages]);\r\n\r\n  const event = () => {\r\n    if (window.innerHeight + window.scrollY >= document.body.scrollHeight - 2) {\r\n      setNewImages(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", event);\r\n    return () => window.removeEventListener(\"scroll\", event);\r\n  }, []);\r\n\r\n  return (\r\n    <main>\r\n      <DockModal\r\n        className=\"no-display\"\r\n        initalType=\"modal\"\r\n        headerName=\"ABOUT\"\r\n        bgcolor=\"#5F9EA0\"\r\n      >\r\n        <br />\r\n        <p className=\"mobile\">\r\n          This project further enhanced my understanding regarding the usages of\r\n          hooks like <strong>useState</strong>, <strong>useEffect</strong>,\r\n          <strong>useRef</strong>. In addition, I practiced fetching{\" \"}\r\n          <strong>API</strong> data from unsplash.com. I also have a better\r\n          understanding of the\r\n          <strong>URL-parameters</strong>. I had learnt some new topics during\r\n          this project, for example, how to add{\" \"}\r\n          <strong>custom environment variables</strong>. I think it is also\r\n          important to be able to utilize the Opensource codes on the internet.\r\n          So, I decided to add this amazing modal-window made by GitHub user\r\n          crackayus09(https://github.com/crackayus09/react-dock-modal) instead\r\n          of writing on my own from scratch.\r\n          <br />\r\n          <strong>\r\n            Close the modal window to explore the functionality of this website.{\" \"}\r\n          </strong>\r\n        </p>\r\n      </DockModal>\r\n      <section className=\"search\">\r\n        <form className=\"search-form\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"search\"\r\n            className=\"form-input\"\r\n            value={query}\r\n            onChange={(e) => {\r\n              setQuery(e.target.value);\r\n            }}\r\n          />\r\n          <button className=\"submit-btn\" type=\"submit\" onClick={handleSubmit}>\r\n            <FaSearch />\r\n          </button>\r\n        </form>\r\n      </section>\r\n      <section className=\"photos\">\r\n        <div className=\"photos-center\">\r\n          {photos.map((image, index) => {\r\n            return <Photo key={index} {...image} />;\r\n          })}\r\n        </div>\r\n        {loading && <h2 className=\"loading\">Loading...</h2>}\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}